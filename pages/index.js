import { Menu, Transition } from '@headlessui/react'
import Head from 'next/head'
import Button from '../src/components/Button/Button'
import ButtonRowContainer from '../src/components/Button/ButtonRowContainer'
import HeaderVideo from '../src/components/Header/HeaderVideo'
import HorizontalList from '../src/components/HorizontalMovieList/HorizontalList'
import NavBar from '../src/components/NavBar/NavBar'
import React, { useState } from 'react';
import Youtube from './api/Youtube'
import SearchBar from '../Legacy/SearchBar'
import axios from 'axios'
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();
// const defaultEndPoint = "https://rickandmortyapi.com/api/character/"
// export async function getServerSideProps() {
//   const res = await fetch(defaultEndPoint)
//   const data = await res.json()
//   return {
//     props: {
//       data
//     }
//   }
// }

export  async function getStaticProps() {
  const movies = await prisma.movie.findMany()
  const movielist = JSON.parse(JSON.stringify(movies))

  return { 
    props: {movielist}
  }
}
 


export default function Home(props) {
  console.log("props", props.movielist)
  const [search, setSearch] = useState('')
  const [video, setVideo] = useState([])


  // const playVideo = e => {
  //   e.target.play();
  //   setVideoStyles({
  //     transform: "scale(2, 2)",
  //     marginLeft: "300px"
  //   });
  // }
  // const stopVideo = e => {
  //   e.target.pause();
  //   setVideoStyles({
  //     transform: "scale(1, 1)",
  //     marginLeft: 0
  //   });
  // }



  // TODO add play and stopVideo to onMouseOver Events. 
  const KEY = 'AIzaSyCBcL4D-cczyvr3WH8jgrPl5rtVcGhTymQ'


  const searchData = async (text) => {
    setSearch(text)
    const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {
      params: {
        part: 'snippet',
        q: search,
        maxResults: 15,
        key: KEY
      }
    })
    setVideo(response.data.items)
  }

  // console.log('videoState', video)


  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-black text-white">
        <NavBar search={searchData} />
        <HeaderVideo />
        Found: {video.length}
        Found: {props.movielist.length}
        {props.movielist.map((movie) => {
          return (
            <div key={movie.id}>
              <h1>{movie.Title}</h1>
              <img 
              src={movie.image}
                className="
                                            snap-center
                                            scroll-hidden
                                            hover:z-50
                                            sm:w-screen
                                            sm:h-1/2
                                            sm:mx-2 mx-3 hover:scale-110 flex-shrink p-5 sm:p-2 text-sm sm:text-md gap-2 inline-flex
                                            transition transform-all active:scale-95 ease-in-out font-semibold items-center 
                                            uppercase shadow-xl drop-shadow-lg cursor-pointer text-slate-500 hover:text-indigo-600 divide-x-w-full sm:rounded-sm "
                autoPlay
                frameBorder="0"
              />
            </div>
            // <h1>{movie.id}</h1>
          )
        }
        )}
        <HorizontalList data={video} />
      </div>
    </div>
  )
}
